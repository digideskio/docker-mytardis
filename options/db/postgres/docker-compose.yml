mytardis-app-postgres:
  restart: always
  build: mytardis-portal
  links:
   - mytardis-db-postgres:db
   - mytardis-rabbitmqamb-postgres:rabbitmq
  volumes_from:
   - mytardis-mytardisstore-postgres
  ports:
   - "50000:22"
  command:
   - "gunicorn"

mytardis-celery-postgres:
  restart: always
  build: mytardis-portal
  links:
   - mytardis-db-postgres:db
   - mytardis-rabbitmqamb-postgres:rabbitmq
  environment:
   - INDEX=1
  volumes_from:
   - mytardis-mytardisstore-postgres
  command:
   - "celery"

mytardis-beat-postgres:
  restart: always
  build: mytardis-portal
  links:
   - mytardis-db-postgres:db
   - mytardis-rabbitmqamb-postgres:rabbitmq
  volumes_from:
   - mytardis-mytardisstore-postgres
  command:
   - "beat"

mytardis-nginx-postgres:
  restart: always
  build: mytardis-nginx
  ports:
   - "80:80"
  volumes_from:
   - mytardis-app-postgres
  links:
   - mytardis-app-postgres:mytardis

mytardis-db-postgres:
  restart: always
  image: postgres
  volumes_from:
    - mytardis-dbstore-postgres
  environment:
    - POSTGRES_PASSWORD=mysecretpassword
    - POSTGRES_USER=postgres
    - POSTGRES_DATABASE=postgres


mytardis-rabbitmq-postgres:
  restart: always
  image: tutum/rabbitmq
  volumes_from:
   - mytardis-rabbitmqstore-postgres
  expose:
   - "5672"
   - "15672"
  hostname: "amqp.local"
  environment:
   - RABBITMQ_PASS=pass

mytardis-rabbitmqamb-postgres:
  restart: always
  image: cpuguy83/docker-grand-ambassador
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock
  environment:
   - RABBITMQ_PASS=pass
  command: "-name dockermytardis_mytardis-rabbitmq-postgres_1"

mytardis-monitor-postgres:
  restart: always
  image: iserko/docker-celery-flower
  ports:
    - "5555:5555"
  links:
    - mytardis-rabbitmqamb-postgres:rabbitmq
  environment:
    - CELERY_BROKER_URL=amqp://admin:pass@rabbitmq//
  command:
    - "--broker_api=http://admin:pass@rabbitmq:15672/api/"
    - "--basic_auth=mytardis:pass"

mytardis-mytardisstore-postgres:
  build: mytardis-portal
  command: "true"

mytardis-dbstore-postgres:
  image: postgres
  volumes:
   - /var/lib/postgresql
  command: "true"

mytardis-rabbitmqstore-postgres:
  image: tutum/rabbitmq
  volumes:
    - /data/mnesia
  command: "true"

# syslog:
#   restart: always
#   build: mytardis-syslog
#   volumes:
#   # see https://jpetazzo  .github.io/2014/08/24/syslog-docker/
#     - /tmp/syslogdev:/dev
# #  volumes_from:
# #    - logstore




