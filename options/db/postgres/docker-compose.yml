version: "2"

services:


    app:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        volumes_from:
            - ssh
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        ports:
            - "$APP_SSH_PORT:2200"
        labels:
            - "org.mytardis.db=postgres"
        command:
            - gunicorn
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        env_file: .env
        environment:
            - DEBUG=$APP_DEBUG
            - GUNICORN_LOG_LEVEL=$GUNICORN_LOG_LEVEL
            - GUNICORN_PORT=$GUNICORN_PORT
            - SYSTEM_LOG_LEVEL=$SYSTEM_LOG_LEVEL
            - MODULE_LOG_LEVEL=$MODULE_LOG_LEVEL
            - SINGLE_SEARCH_ENABLED=$SINGLE_SEARCH_ENABLED
            - DB_PORT=$DB_PORT
            - DB_USER=$DB_USER
            - DB_PASS=$DB_PASS
            - DB_NAME=$DB_NAME
            - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS

    celery:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        labels:
            - "org.mytardis.db=postgres"
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        environment:
            - DEBUG=$CELERY_DEBUG
            - CELERY_LOG_LEVEL=$CELERY_LOG_LEVEL
            - SYSTEM_LOG_LEVEL=$SYSTEM_LOG_LEVEL
            - MODULE_LOG_LEVEL=$MODULE_LOG_LEVEL
            - SINGLE_SEARCH_ENABLED=$SINGLE_SEARCH_ENABLED
            - DB_PORT=$DB_PORT
            - DB_USER=$DB_USER
            - DB_PASS=$DB_PASS
            - DB_NAME=$DB_NAME
            - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
        # volumes_from:
        #     - mytardisstore
        command:
            - celery
        env_file: .env


    beat:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        labels:
            - "org.mytardis.db=postgres"
        command:
            - beat
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        environment:
            - DEBUG=$BEAT_DEBUG
            - DB_PORT=$DB_PORT
            - DB_USER=$DB_USER
            - DB_PASS=$DB_PASS
            - DB_NAME=$DB_NAME
            - BEAT_LOG_LEVEL=INFO
            - SYSTEM_LOG_LEVEL=$SYSTEM_LOG_LEVEL
            - MODULE_LOG_LEVEL=$MODULE_LOG_LEVEL
            - SINGLE_SEARCH_ENABLED=$SINGLE_SEARCH_ENABLED
            - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS
        env_file: .env


    db:
        restart: always
        image: postgres
        labels:
            - "org.mytardis.db=postgres"
        volumes:
            - dbstore:/var/lib/postgresql/data
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        environment:
            - POSTGRES_USER=$DB_USER
            - POSTGRES_PASSWORD=$DB_PASS
            - POSTGRES_DATABASE=$DB_NAME
        env_file: .env

    elasticsearch:
        restart: always
        image: elasticsearch:2.3.1
        volumes:
            - elasticstore:/opt/elasticsearch/data
        #command: "elasticsearch -Des.cluster.name='graylog'"


    nginx:
        restart: always
        build: mytardis-nginx
        image: ianedwardthomas/mytardis-nginx-postgres:latest-travis
        ports:
            - $NGINX_PORT:80
            - $KIBANA_PORT:5601
        volumes_from:
            - app
        links:
            - app:mytardisapp
        volumes:
            - ./certs:/opt/certs:ro
            - ./nginx_config:/etc/nginx/conf.d:ro
        depends_on:
            - app
        env_file: .env
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"


    rabbitmq:
        restart: always
        image: rabbitmq:3-management
        #image: rabbitmq:3.6.1
        volumes:
            - rabbitmqstore:/data/mnesia
        expose:
            - '5672'
            - '15672'
        env_file: .env
        logging:
            driver: gelf
            options:
                gelf-address: udp://localhost:12201
                tag: "{{.ImageName}}/{{.Name}}/{{.ID}}"
        hostname: amqp.local
        environment:
            - RABBITMQ_DEFAULT_USER=$RABBITMQ_DEFAULT_USER
            - RABBITMQ_DEFAULT_PASS=$RABBITMQ_DEFAULT_PASS

    monitor:
        restart: always
        image: iserko/docker-celery-flower
        links:
            - rabbitmq:amqp
        ports:
            - $MONITOR_PORT:5555
        depends_on:
            - rabbitmq
        env_file: .env
        environment:
            - CELERY_BROKER_URL=amqp://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@amqp//
        command:
            - --broker_api=http://$RABBITMQ_DEFAULT_USER:$RABBITMQ_DEFAULT_PASS@amqp:15672/api/
            - --basic_auth=$MONITOR_USER:$MONITOR_PASS

    ssh:
        restart: always
        image: million12/ssh
        env_file: .env
        ports:
            - "$SRC_SSH_PORT:22"
        environment:
            - ROOT_PASS=$SSH_PASS
        volumes:
            - mydatastore:/mydatastaging
            - mydataconfig:/data


    logstash:
        restart: always
        image: logstash
        command: |
          -e '
          input {
            # Default port is 12201/udp
            gelf { }
            # This generates one test event per minute.
            # It is great for debugging, but you might
            # want to remove it in production.
            heartbeat { }
          }
          # The following filter is a hack!
          # The "de_dot" filter would be better, but it
          # is not pre-installed with logstash by default.
          filter {
            ruby {
              code => "
                event.to_hash.keys.each { |k| event[ k.gsub('"'.'"','"'_'"') ] = event.remove(k) if k.include?'"'.'"' }
              "
            }
          }
          output {
            elasticsearch {
              hosts => ["elasticsearch:9200"]
            }
            # This will output every message on stdout.
            # It is great when testing your setup, but in
            # production, it will probably cause problems;
            # either by filling up your disks, or worse,
            # by creating logging loops! BEWARE!
            #stdout {
            #  codec => rubydebug
            #}
          }'
        ports:
            - "12201:12201/udp"

    kibana:
        restart: always
        image: kibana
        env_file: .env
        depends_on:
            - elasticsearch
        expose:
            - 5601
        #ports:
        #    - "$KIBANA_PORT:5601"
        environment:
            ELASTICSEARCH_URL: http://elasticsearch:9200
            NODE_OPTIONS: "--max-old-space-size=200"




    # mongo:
    #     image: "mongo:3"
    #
    # graylog:
    #     image: graylog2/server:2.0.1-1
    #     environment:
    #         - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
    #         - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
    #         - GRAYLOG_REST_TRANSPORT_URI=http://192.168.99.102:12900
    #     ports:
    #         - "9000:9000"
    #         - "12900:12900"


volumes:
    rabbitmqstore:
    dbstore:
    mytardisstore:
    mydatastore:
    mydataconfig:
    elasticstore:
