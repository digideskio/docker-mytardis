version: "2"

services:

    app:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        volumes_from:
            - ssh
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        ports:
            - "2200:2200"
        labels:
            - "org.mytardis.db=postgres"
        command:
            - gunicorn
        environment:
            - DEBUG=0
            - GUNICORN_LOG_LEVEL=INFO
            - GUNICORN_PORT=80
            - SYSTEM_LOG_LEVEL=WARN
            - MODULE_LOG_LEVEL=WARN
            - SINGLE_SEARCH_ENABLED=1
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASS=mysecretpassword
            - DB_NAME=postgres
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=pass

    celery:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        labels:
            - "org.mytardis.db=postgres"
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        environment:
            - DEBUG=0
            - CELERY_LOG_LEVEL=INFO
            - SYSTEM_LOG_LEVEL=WARN
            - MODULE_LOG_LEVEL=WARN
            - SINGLE_SEARCH_ENABLED=1
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASS=mysecretpassword
            - DB_NAME=postgres
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=pass
        # volumes_from:
        #     - mytardisstore
        command:
            - celery

    beat:
        restart: always
        build: mytardis-portal
        image: ianedwardthomas/mytardis-app-postgres:latest-travis
        volumes:
            - mytardisstore:/store
        links:
            - db:db
            - rabbitmq:amqp
            - elasticsearch:haystack
        depends_on:
            - db
            - rabbitmq
        labels:
            - "org.mytardis.db=postgres"
        command:
            - beat
        environment:
            - DB_PORT=5432
            - DB_USER=postgres
            - DB_PASS=mysecretpassword
            - DB_NAME=postgres
            - DEBUG=0
            - BEAT_LOG_LEVEL=INFO
            - SYSTEM_LOG_LEVEL=WARN
            - MODULE_LOG_LEVEL=WARN
            - SINGLE_SEARCH_ENABLED=1
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=pass

    db:
        restart: always
        image: postgres
        labels:
            - "org.mytardis.db=postgres"
        volumes:
            - dbstore:/var/lib/postgresql
        environment:
            - POSTGRES_PASSWORD=mysecretpassword
            - POSTGRES_USER=postgres
            - POSTGRES_DATABASE=postgres

    elasticsearch:
        restart: always
        image: elasticsearch:2.3.1

    nginx:
        restart: always
        build: mytardis-nginx
        image: ianedwardthomas/mytardis-nginx-postgres:latest-travis
        ports:
            - 80:80
        volumes_from:
            - app
        links:
            - app:mytardisapp
        depends_on:
            - app

    rabbitmq:
        restart: always
        image: rabbitmq:3-management
        #image: rabbitmq:3.6.1
        volumes:
            - rabbitmqstore:/data/mnesia
        expose:
            - '5672'
            - '15672'
        hostname: amqp.local
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=pass

    monitor:
        restart: always
        image: iserko/docker-celery-flower
        links:
            - rabbitmq:amqp
        ports:
            - 5555:5555
        depends_on:
            - rabbitmq
        environment:
            - CELERY_BROKER_URL=amqp://admin:pass@amqp//
        command:
            - --broker_api=http://admin:pass@amqp:15672/api/
            - --basic_auth=mytardis:pass

    ssh:
        restart: always
        image: million12/ssh
        ports:
            - "50000:22"
        environment:
            - ROOT_PASS=my_pass
        volumes:
            - mydatastore:/mydatastaging
            - mydataconfig:/data:ro

volumes:
    rabbitmqstore: {}
    dbstore: {}
    mytardisstore: {}
    mydatastore: {}
    mydataconfig: {}
